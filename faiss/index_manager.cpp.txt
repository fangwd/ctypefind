#include "index_manager.h"

{% for entry in includes %}
#include {{entry}}
{% endfor %}

namespace veclens {

faiss::Index *IndexManager::create_faiss_index(const IndexConfig& index_config) {
  switch(index_config.index_type()) {
  {% for entry in structs %}
  case IndexType::{{ entry.name }}: {
    const auto &config = *dynamic_cast<const {{entry.name}}IndexConfig*>(&index_config);
    return new {{entry.decl_name}}({% for field in entry.fields %}config.{{field.name}}{% if not loop.last %}, {% endif %}{% endfor %});
  }
  {% endfor %}
  default:
    return nullptr;
  }
}

}